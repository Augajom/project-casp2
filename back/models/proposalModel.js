const cron = require('node-cron');
const moment = require('moment-timezone');
const db = require('../config/database');

// ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô active ‡πÄ‡∏°‡∏∑‡πà‡∏≠ start_date ‡∏ñ‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
const updateStartDate = () => {
  const today = moment().tz('Asia/Bangkok').format('YYYY-MM-DD');

  const sql = `
    UPDATE fiscal_years
    SET status = 'active'
    WHERE start_date <= ? AND end_date > ?
  `;

  db.query(sql, [today, today], (err, result) => {
    if (err) {
      console.error("‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏õ‡πá‡∏ô active ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
    } else {
      console.log("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏õ‡πá‡∏ô active ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      updateControlStatus();
    }
  });
};

// ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô inactive ‡πÄ‡∏°‡∏∑‡πà‡∏≠ end_date <= ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
const updateEndDate = () => {
  const today = moment().tz('Asia/Bangkok').format('YYYY-MM-DD');

  const sql = `
    UPDATE fiscal_years
    SET status = 'inactive'
    WHERE end_date <= ?
  `;

  db.query(sql, [today], (err, result) => {
    if (err) {
      console.error("‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏õ‡πá‡∏ô inactive ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
    } else {
      console.log("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏õ‡πá‡∏ô inactive ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      updateControlStatus();
    }
  });
};

// ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï control_status ‡∏ï‡∏≤‡∏° status ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
const updateControlStatus = () => {
  const sqlControl = `
    UPDATE controls
    SET control_status = (
      SELECT CASE
        WHEN EXISTS (
          SELECT 1 FROM fiscal_years WHERE status = 'active'
        ) THEN 1 ELSE 0
      END
    )
    WHERE control_name = 'is_open_proposal'
  `;

  db.query(sqlControl, (err, controlResult) => {
    if (err) {
      console.error("‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï control_status ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
    } else {
      console.log("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï control_status ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    }
  });
};

// ‚è∞ ‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏ï‡∏≠‡∏ô 00:00:01 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö start_date
cron.schedule('1 0 0 * * *', () => {
  console.log('üîÅ ‡∏£‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï start_date (00:00:01)');
  updateStartDate();
});

// ‚è∞ ‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏ï‡∏≠‡∏ô 23:59:59 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö end_date
cron.schedule('59 59 23 * * *', () => {
  console.log('üîÅ ‡∏£‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï end_date (23:59:59)');
  updateEndDate();
});
